<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuzhe.shop.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.liuzhe.shop.pojo.Comment" >
    <id column="comid" property="comid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comid, content, created, pid, uid, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liuzhe.shop.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comid = #{comid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comid = #{comid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuzhe.shop.pojo.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuzhe.shop.pojo.Comment" >
    insert into comment (comid, content, created, 
      pid, uid, state)
    values (#{comid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liuzhe.shop.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comid != null" >
        comid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comid != null" >
        #{comid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuzhe.shop.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.comid != null" >
        comid = #{record.comid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set comid = #{record.comid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuzhe.shop.pojo.Comment" >
    update comment
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where comid = #{comid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuzhe.shop.pojo.Comment" >
    update comment
    set content = #{content,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where comid = #{comid,jdbcType=INTEGER}
  </update>
  
  
  
  
  <!-- 自定义  两表联查 -->
  <resultMap id="commentPojoMap" type="com.liuzhe.shop.pojo.CommentPojo" >
    <id column="comid" property="comid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectCommentPojoByPid" parameterType="Integer" resultMap="commentPojoMap" >
    select c.*, u.username from comment c left join user u on c.uid=u.uid where c.pid=#{pid,jdbcType=INTEGER}
  </select>
  <select id="selectCommentCountByPid" parameterType="Integer" resultMap="commentPojoMap" >
    select count(*) count from comment where pid=#{pid,jdbcType=INTEGER}
  </select>
</mapper>